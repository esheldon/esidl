
pro mrdis, image, xmn=xmn, xmx=xmx, ymn=ymn, ymx=ymx, low=low, $
	high=high, log=log, full=full, flipx=flipx, flipy=flipy, $
	rot=rot, nsig=nsig, niter=niter, silent=silent, _extra=e

;+
; NAME:
;       RDIS
; PURPOSE:
;	Simple wrapper for tvim2
;
; CALLING SEQUENCE:
;       rdis, image, xmn=xmin, xmx=xmax, ymn=ymin, ymx=ymax, 
;		low=low, high=high, log=log, zoom=zoom, full=full
;		flipx=flipx, flipy=flipy
;
; INPUTS:
;       image to be displayed
;	
;
; OPTIONAL OUTPUT ARRAYS:
;
; INPUT KEYWORD PARAMETERS:
;	pls = plot structure, generated by rdis_setup
;	  Must include:
;		xmn,xmx,ymn,ymx,low,high
;	limits
;	range values
;
; PROCEDURE:
;	the file 
;
; REVISION HISTORY:
;	Tim McKay	UM	1/29/97
;       Erin Scott Sheldon UMich 6/17/99  This version sets itself up. This 
;                                         version does not zoom.
;-
  On_error,2                    ;Return to caller

  IF N_params() EQ 0 THEN BEGIN 
      print,'Syntax - mrdis, image [, xmn=xmn, xmx=xmx, ymn=ymn, ymx=ymx,low=low, high=high, log=log, full=full, _extra=e]'
      return
  ENDIF 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; This version sets up itself.  Run rdis for zooming
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  rdis_setup,image,pls
 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; First process the plot structure
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  IF n_elements(niter) eq 0 THEN niter=2.0
  IF n_elements(nsig) eq 0 THEN nsig=3.5

  IF (pls.xmn EQ 0 AND pls.xmx EQ 0) THEN BEGIN 
	r=size(image)
	xmin=0
	xmax=r(1)-1
  ENDIF ELSE BEGIN 
	xmin=pls.xmn
	xmax=pls.xmx
  ENDELSE 
  
  IF (pls.ymn EQ 0 AND pls.ymx EQ 0) THEN BEGIN 
	r=size(image)
	ymin=0
	ymax=r(2)-1
  ENDIF ELSE BEGIN 
	ymin=pls.ymn
	ymax=pls.ymx
  ENDELSE 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Deal with input parameters
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  IF keyword_set(log) THEN imin=alog10(abs(image)) ELSE imin = image

  IF n_elements(xmn) NE 0 THEN xmin = xmn
  IF n_elements(xmx) NE 0 THEN xmax = xmx
  IF n_elements(ymn) NE 0 THEN ymin = ymn
  IF n_elements(ymx) NE 0 THEN ymax = ymx
  IF keyword_set(silent) THEN silent=1 ELSE silent=0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Range of plot
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  IF (pls.low eq pls.high) THEN BEGIN 

      sigma_clip, imin(xmin:xmax,ymin:ymax), mean, sigma, $
                  nsig=nsig, niter=niter, silent=silent
      
      IF n_elements(low) NE 0  THEN rlow  = low  ELSE rlow  = mean-sigma
      IF n_elements(high) NE 0 THEN rhigh = high ELSE rhigh = mean+5.*sigma

  ENDIF ELSE BEGIN 
    rlow=pls.low
    rhigh=pls.high
  ENDELSE 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Rotate or flip image if requested
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  IF keyword_set(flipx) THEN BEGIN 
      IF pls.xmn EQ 0 THEN BEGIN 
          imin=reverse(image)		
      ENDIF ELSE BEGIN 
          r=size(image)
          imin=reverse(image)
          xmax=r(1)-pls.xmn
          xmin=r(1)-pls.xmx 
      ENDELSE 
  ENDIF 
  
  IF keyword_set(flipy) THEN BEGIN 
      IF pls.ymn EQ 0 THEN begin
          imin=reverse(image, 2)		
      ENDIF ELSE BEGIN 
          r=size(image)
          imin=reverse(image,2)
          ymax=r(2)-pls.ymn
          ymin=r(2)-pls.ymx
      ENDELSE 
  ENDIF 

  IF keyword_set(rot) THEN BEGIN 
      IF pls.ymn EQ 0 THEN BEGIN 
          imin=rotate(image, 2)		
      ENDIF ELSE BEGIN 
          r=size(image)
          imin=rotate(image,2)
          xmax=r(1)-pls.xmn
          xmin=r(1)-pls.xmx 
          ymax=r(2)-pls.ymn
          ymin=r(2)-pls.ymx
      ENDELSE 
  ENDIF 
  
  IF NOT silent THEN BEGIN 
      print,"range=",rlow,rhigh
      print,"Displaying im(",xmin,":",xmax,",",ymin,":",ymax,")"
  ENDIF 

  tvim2_scl, imin, xmin, xmax, ymin, ymax, $
             range=[rlow,rhigh], _extra=e
  
  return
END 



